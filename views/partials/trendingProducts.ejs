<head>
    <style>
        .product-showcase-section {
        padding: 6rem 1rem;
        background: linear-gradient(135deg, var(--off-white) 0%, var(--pure-white) 100%);
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
    }

    .services-header {
        text-align: center;
        margin-bottom: 3rem;
    }

    .services-title {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

    .services-subtitle {
        font-size: 1rem;
        color: var(--dark-gray);
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
        justify-content: center;
    }

    .col-6,
    .col-md-4,
    .col-lg-3 {
        flex: 1 1 calc(100% - 2rem);
        max-width: 100%;
    }

    @media (min-width: 576px) {
        .col-6 {
            flex: 1 1 calc(50% - 2rem);
            max-width: calc(50% - 2rem);
        }
    }

    @media (min-width: 768px) {
        .col-md-4 {
            flex: 1 1 calc(33.333% - 2rem);
            max-width: calc(33.333% - 2rem);
        }
    }

    @media (min-width: 992px) {
        .col-lg-3 {
            flex: 1 1 calc(25% - 2rem);
            max-width: calc(25% - 2rem);
        }
    }

    .product-card {
        background: var(--pure-white);
        border: 1px solid var(--medium-gray);
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.05);
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        display: flex;
        flex-direction: column;
        height: 100%;
    }

    .product-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 20px 50px rgba(0, 0, 0, 0.1);
    }

    .product-image-wrapper {
        position: relative;
        overflow: hidden;
        background-color: var(--light-gray);
    }

    .product-image {
        width: 100%;
        height: 280px;
        object-fit: cover;
        transition: transform 0.4s ease;
        display: block;
    }

    .product-card:hover .product-image {
        transform: scale(1.05);
    }

    .out-of-stock-badge {
        position: absolute;
        top: 1rem;
        left: 1rem;
        background-color: var(--primary-black);
        color: var(--pure-white);
        padding: 0.3rem 0.8rem;
        border-radius: 25px;
        font-size: 0.75rem;
        font-weight: 600;
        z-index: 3;
    }

    .product-info {
        padding: 1.5rem;
        text-align: center;
    }

    .product-title {
        font-family: 'Playfair Display', serif;
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--primary-black);
        margin-bottom: 0.5rem;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .product-price {
        font-size: 1.1rem;
        color: var(--dark-gray);
        font-weight: 500;
        margin-bottom: 1rem;
    }

    .product-hover-content {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(5px);
        padding: 1.5rem;
        text-align: center;
        transform: translateY(100%);
        transition: transform 0.4s ease;
        opacity: 0;
    }

    .product-card:hover .product-hover-content {
        transform: translateY(0);
        opacity: 1;
    }

    .view-details-btn {
        background: var(--primary-black);
        color: var(--pure-white);
        border: none;
        padding: 0.75rem 1.5rem;
        font-size: 0.9rem;
        font-weight: 600;
        border-radius: 50px;
        text-decoration: none;
        transition: all 0.3s ease;
    }

    @media (max-width: 767px) {
  .view-details-btn {
        background: var(--primary-black);
        color: var(--pure-white);
        border: none;
        padding: 0.5rem 1.2rem;
        font-size: 0.7rem;
        font-weight: 500;
        border-radius: 30px;
        text-decoration: none;
        transition: all 0.3s ease;
    }
}

    .view-details-btn:hover {
        background: var(--accent-sage);
        color: var(--primary-black);
        transform: scale(1.05);
    }

    /* Optional fade-in effect */
    .fade-in {
        opacity: 0;
        transform: translateY(20px);
        transition: opacity 0.6s ease, transform 0.6s ease;
    }

    .fade-in.show {
        opacity: 1;
        transform: translateY(0);
    }
    </style>
</head>


<section class="product-showcase-section fade-in">
    <div class="container">
        <div class="services-header fade-in">
            <h2 class="services-title">IN THE SPOTLIGHT</h2>
            <p class="services-subtitle">Discover our most loved and popular handcrafted designs.</p>
        </div>
        <div class="row g-4">
            <% trendingProducts.forEach(product => { %>
                <div class="col-md-4 col-lg-3 col-6">
                    <div class="product-card fade-in">
                        <div class="product-image-wrapper">
                            <a href="/product/<%= product._id %>">
                                <% if (product.imageUrl && product.imageUrl.length > 0) { %>
                                    <img class="product-image"
                                         src="<%= product.imageUrl[0] %>"
                                         alt="<%= product.name %>"
                                         data-images='<%- JSON.stringify(product.imageUrl) %>'>
                                <% } else { %>
                                     <img class="product-image" src="/images/placeholder.jpg" alt="Image coming soon">
                                <% } %>
                            </a>
                            <% if (product.outOfStock) { %>
                                <span class="out-of-stock-badge">Out of stock</span>
                            <% } %>
                        </div>

                        <div class="product-info">
                            <h3 class="product-title" title="<%= product.name %>"><%= product.name %></h3>
                            <p class="product-price">
                                <% if (currency === 'NGN') { %>
                                    &#8358;<%= parseFloat(product.NGNprice).toFixed(2) %>
                                <% } else { %>
                                    $<%= parseFloat(product.USDprice).toFixed(2) %>
                                <% } %>
                            </p>
                        </div>
                        
                        <div class="product-hover-content">
                             <a href="/product/<%= product._id %>" class="view-details-btn">View Details</a>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>
    </div>
</section>

<script src="/scripts/script.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Fade-in animation observer
        const fadeElements = document.querySelectorAll(".fade-in");
        const fadeObserver = new IntersectionObserver(
            (entries, observer) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add("show");
                        observer.unobserve(entry.target);
                    }
                });
            },
            { threshold: 0.1 }
        );
        fadeElements.forEach(element => fadeObserver.observe(element));

        // Image cycling effect on hover
        document.querySelectorAll('.product-image-wrapper').forEach(wrapper => {
            const image = wrapper.querySelector('.product-image');
            const imageData = image.dataset.images;
            if (!imageData) return;

            const images = JSON.parse(imageData);
            if (images.length > 1) {
                let interval;
                const originalImage = images[0];

                wrapper.addEventListener('mouseenter', () => {
                    let currentIndex = 1;
                    interval = setInterval(() => {
                        image.src = images[currentIndex];
                        currentIndex = (currentIndex + 1) % images.length;
                    }, 1200);
                });

                wrapper.addEventListener('mouseleave', () => {
                    clearInterval(interval);
                    image.src = originalImage; // Reset to the default image
                });
            }
        });
    });
</script>